<?php

namespace Tests\Feature;

use App\Modules\NewsGetter\Application\Services\NewsService;
use App\Modules\NewsGetter\Application\Services\NewsServiceInterface;
use App\Modules\NewsGetter\Infrastructure\DTOs\NewsDTO;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class SaveNewsTest extends TestCase
{

    private NewsService $newsService;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->newsService = app(NewsServiceInterface::class);
    }


    public function test_save_news(): void
    {
        $news1 = new NewsDTO('testDesctiption1', 'testType1', 'testLink1','2024-04-12 12:59:59');
        $news2 = new NewsDTO('testDesctiption2', 'testType2', 'testLink2', '2024-04-12 14:59:59');

        $testNews = [$news1, $news2];

        $this->newsService->saveNews($testNews);

        $this->assertDatabaseHas('news',
            [   'description' => $news1->description,
                'news_type' => $news1->newsType,
                'link' => $news1->link,
                'pub_date' => $news1->pubDate
            ]
        );

        $this->assertDatabaseHas('news',
            [   'description' => $news2->description,
                'news_type' => $news2->newsType,
                'link' => $news2->link,
                'pub_date' => $news2->pubDate
            ]
        );

    }
}
